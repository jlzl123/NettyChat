• 如果该 HTTP 请求被发送到URI “/ws”，调用 FullHttpRequest 上的 retain()，并通过调用 fireChannel
  Read(msg) 转发到下一个 ChannelInboundHandler。retain() 是必要的，因为 channelRead() 完成
      后，它会调用 FullHttpRequest 上的 release() 来释放其资源。 （请参考我们先前的 SimpleChannelInbo
  undHandler 在第6章中讨论）
• 如果客户端发送的 HTTP 1.1 头是“Expect: 100-continue” ，将发送“100 Continue”的响应。
• 在 头被设置后，写一个 HttpResponse 返回给客户端。注意，这是不是 FullHttpResponse，唯一的反应
      的第一部分。此外，我们不使用 writeAndFlush() 在这里 - 这个是在最后完成。
• 如果没有加密也不压缩，要达到最大的效率可以是通过存储 index.html 的内容在一个 DefaultFileRegion
      实现。这将利用零拷贝来执行传输。出于这个原因，我们检查，看看是否有一个 SslHandler 在 ChannelPi
  peline 中。另外，我们使用 ChunkedNioFile。
• 写 LastHttpContent 来标记响应的结束，并终止它
• 如果不要求 keepalive ，添加 ChannelFutureListener 到 ChannelFuture 对象的最后写入，并关闭连
      接。注意，这里我们调用 writeAndFlush() 来刷新所有以前写的信息。